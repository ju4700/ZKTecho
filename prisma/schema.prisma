// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Employee {
  id                String   @id @default(cuid())
  employeeId        String   @unique // ZKTeco device employee ID
  name              String
  phone             String?
  monthlySalary     Float    // Monthly salary instead of hourly
  isActive          Boolean  @default(true)
  
  // Device integration fields
  deviceUserId      String?  // ID used on the ZKTeco device
  fingerprintEnrolled Boolean @default(false) // Has fingerprint been registered
  fingerprintDate   DateTime? // When fingerprint was first registered
  lastSyncedAt      DateTime? // Last time synced with device
  
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  // Relations
  attendances       Attendance[]
  salaries          Salary[]

  @@map("employees")
}

model Attendance {
  id         String   @id @default(cuid())
  employeeId String
  deviceId   String?  // ZKTeco device ID
  timestamp  DateTime
  type       AttendanceType
  createdAt  DateTime @default(now())

  // Relations
  employee   Employee @relation(fields: [employeeId], references: [id], onDelete: Cascade)

  @@map("attendances")
}

model Salary {
  id            String   @id @default(cuid())
  employeeId    String
  month         Int      // 1-12
  year          Int
  totalHours    Float
  regularHours  Float
  overtimeHours Float
  grossSalary   Float
  deductions    Float    @default(0)
  netSalary     Float
  isPaid        Boolean  @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // Relations
  employee      Employee @relation(fields: [employeeId], references: [id], onDelete: Cascade)

  @@unique([employeeId, month, year])
  @@map("salaries")
}

model Settings {
  id                String  @id @default(cuid())
  key               String  @unique
  value             String
  description       String?
  updatedAt         DateTime @updatedAt

  @@map("settings")
}

enum AttendanceType {
  CHECK_IN
  CHECK_OUT
  BREAK_IN
  BREAK_OUT
}
